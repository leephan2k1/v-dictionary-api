generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

enum PracticeStatus {
  FORGOT
  HARD_TO_REMEMBER
  NOT_PRACTICE
  REMEMBERED
  TEMPORARILY_FORGET
}

model User {
  id                 String               @id @default(cuid())
  email              String?
  image              String?
  name               String?
  accountId          String?              @unique
  provider           String
  createdAt          DateTime             @default(now())
  updatedAt          DateTime             @updatedAt
  translationHistory TranslationHistory[]
  practices          Practice[]

  @@unique([email, accountId])
}

model Practice {
  id                   String         @id @default(cuid())
  status               PracticeStatus @default(NOT_PRACTICE)
  latestLearningTime   DateTime?
  forgottenFrequency   Int?
  numberOfDaysToForget Int            @default(7)
  tag                  String         @default("default")
  createdAt            DateTime       @default(now())
  updatedAt            DateTime       @updatedAt
  user                 User           @relation(fields: [userId], references: [id])
  userId               String
  word                 Word           @relation(fields: [wordContent], references: [wordContent])
  wordContent          String

  @@unique([userId, wordContent])
  @@index([userId])
  @@index([wordContent])
}

model Word {
  id                   String              @id @default(cuid())
  format               String
  wordContent          String              @unique
  typesOfWord          TypeOfWord[]
  senses               Sense[]
  less_frequent_senses LessFrequentSense[]
  similar_phrases      SimilarPhrase[]
  examples             WordExample[]
  createdAt            DateTime            @default(now())
  updatedAt            DateTime            @updatedAt
  practice             Practice[]

  @@index([wordContent])
}

model TypeOfWord {
  id    String  @id @default(cuid())
  type  String  @unique
  Word  Word[]
  Sense Sense[]
}

model WordExample {
  id         String  @id @default(cuid())
  en         String  @db.Text
  vi         String  @db.Text
  keyword_en String?
  keyword_vi String?
  Word       Word?   @relation(fields: [wordId], references: [id])
  wordId     String?

  @@index([wordId])
}

model LessFrequentSense {
  id     String  @id @default(cuid())
  sense  String
  Word   Word?   @relation(fields: [wordId], references: [id])
  wordId String?

  @@index([wordId])
}

model Sense {
  id              String         @id @default(cuid())
  sense           String?
  typeOfWord      TypeOfWord?    @relation(fields: [typeOfWordId], references: [id])
  example         SimilarPhrase? @relation(fields: [similarPhraseId], references: [id])
  Word            Word?          @relation(fields: [wordId], references: [id])
  category        String?
  typeOfWordId    String?
  similarPhraseId String?        @unique
  wordId          String?

  @@index([typeOfWordId])
  @@index([similarPhraseId])
  @@index([wordId])
}

model SimilarPhrase {
  id     String  @id @default(cuid())
  en     String
  vi     String
  Sense  Sense?
  Word   Word?   @relation(fields: [wordId], references: [id])
  wordId String?

  @@index([wordId])
}

model TranslationHistory {
  id              String   @id @default(cuid())
  currentLanguage String
  targetLanguage  String
  word            String
  sense           String
  users           User     @relation(fields: [userId], references: [id])
  userId          String
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt

  @@unique([userId, word])
  @@index([userId])
}

// use for express session:
// https://www.npmjs.com/package/@quixo3/prisma-session-store
model Session {
  id        String   @id
  sid       String   @unique
  data      String
  expiresAt DateTime
}
